{
  "_from": "vue-loading-overlay@^2.1.0",
  "_id": "vue-loading-overlay@2.2.1",
  "_inBundle": false,
  "_integrity": "sha512-FAzkEaTGRQc7Mt/U0W57+OIDdOpZq4RQGl8a9/JYoKQNRMtxaYr7rZh0tbQKs5994VsGTQwGu9In7nDSwFpOaA==",
  "_location": "/vue-loading-overlay",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "vue-loading-overlay",
    "fetchSpec": "^2.1.0",
    "name": "vue-loading-overlay",
    "raw": "vue-loading-overlay@^2.1.0",
    "rawSpec": "^2.1.0",
    "registry": true,
    "saveSpec": null,
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/vue-loading-overlay/-/vue-loading-overlay-2.2.1.tgz",
  "_shasum": "dc9a8d93a4c7ca05694048f6d8a560b8e92680ec",
  "_spec": "vue-loading-overlay@^2.1.0",
  "_where": "C:\\Users\\owner\\Desktop\\USERMANAGEMENT\\Telemedicine\\teleconsul\\afya-platform-new",
  "author": {
    "name": "ankurk91"
  },
  "browser": "dist/vue-loading.min.js",
  "bugs": {
    "url": "https://github.com/ankurk91/vue-loading-overlay/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "Vue.js v2.x component for full screen loading indicator",
  "devDependencies": {
    "@vue/test-utils": "^1.0.0-beta.24",
    "autoprefixer": "^9.1.0",
    "babel-core": "^6.26.3",
    "babel-loader": "^7.1.5",
    "babel-preset-env": "^1.7.0",
    "bootstrap": "^4.1.3",
    "clean-webpack-plugin": "^0.1.18",
    "cross-env": "^5.2.0",
    "css-loader": "^1.0.0",
    "file-loader": "^1.1.6",
    "html-webpack-plugin": "^3.2.0",
    "jest": "^23.5.0",
    "mini-css-extract-plugin": "^0.4.1",
    "node-sass": "^4.9.3",
    "postcss-loader": "^3.0.0",
    "sass-loader": "^7.1.0",
    "style-loader": "^0.22.1",
    "unminified-webpack-plugin": "^2.0.0",
    "vue": "^2.5.17",
    "vue-jest": "^2.6.0",
    "vue-loader": "^15.3.0",
    "vue-template-compiler": "^2.5.17",
    "webpack": "^4.16.5",
    "webpack-command": "^0.4.1",
    "webpack-serve": "^2.0.2"
  },
  "engines": {
    "node": ">=6.9.0",
    "npm": ">=3.10.0"
  },
  "files": [
    "dist",
    "src"
  ],
  "homepage": "https://github.com/ankurk91/vue-loading-overlay",
  "jest": {
    "collectCoverage": false,
    "moduleFileExtensions": [
      "js",
      "json",
      "jsx",
      "node",
      "vue"
    ],
    "testURL": "http://localhost",
    "transform": {
      ".*\\.(vue)$": "<rootDir>/node_modules/vue-jest",
      "^.+\\.js$": "<rootDir>/node_modules/babel-jest"
    }
  },
  "keywords": [
    "loader",
    "loading",
    "overlay",
    "vue"
  ],
  "license": "MIT",
  "main": "dist/vue-loading.js",
  "name": "vue-loading-overlay",
  "optionalDependencies": {},
  "peerDependencies": {
    "vue": "^2.0.0"
  },
  "readme": "# Vue Loading Overlay Component\n\n[![vue-js](https://img.shields.io/badge/vue.js-2.x-brightgreen.svg?maxAge=604800)](https://vuejs.org/)\n[![downloads](https://img.shields.io/npm/dt/vue-loading-overlay.svg)](http://npm-stats.com/~packages/vue-loading-overlay)\n[![npm-version](https://img.shields.io/npm/v/vue-loading-overlay.svg)](https://www.npmjs.com/package/vue-loading-overlay)\n[![github-tag](https://img.shields.io/github/tag/ankurk91/vue-loading-overlay.svg?maxAge=1800)](https://github.com/ankurk91/vue-loading-overlay/)\n[![license](https://img.shields.io/github/license/ankurk91/vue-loading-overlay.svg?maxAge=1800)](https://yarnpkg.com/en/package/vue-loading-overlay)\n[![build-status](https://travis-ci.org/ankurk91/vue-loading-overlay.svg?branch=master)](https://travis-ci.org/ankurk91/vue-loading-overlay)\n\nVue.js v2.x component for full screen loading indicator\n\n## Demo on [JSFiddle](https://jsfiddle.net/ankurk91/w8y8k5wo/)\n\n## Installation\n```bash\n# npm\nnpm install vue-loading-overlay --save\n\n# Yarn\nyarn add vue-loading-overlay\n```\n\n## Usage\n#### As component\n```html\n<template>\n    <div class=\"loading-parent\">\n        <loading :active.sync=\"isLoading\" \n        :can-cancel=\"true\" \n        :on-cancel=\"whenCancelled\"\n        :is-full-page=\"fullPage\"></loading>\n        \n        <label><input type=\"checkbox\" v-model=\"fullPage\">Full page?</label>\n        <button @click.prevent=\"doAjax\">fetch Data</button>\n    </div>\n</template>\n\n<script>\n    // Import component\n    import Loading from 'vue-loading-overlay';\n    // Import stylesheet\n    import 'vue-loading-overlay/dist/vue-loading.min.css';\n    // Using axios for the demo only\n    import axios from 'axios';\n    \n    export default {\n        data() {\n            return {\n                isLoading: false,\n                fullPage: true\n            }\n        },\n        components: {\n            Loading\n        },\n        methods: {\n            doAjax() {\n                this.isLoading = true;\n                // AJAX example with axios\n                axios.post('/api').then((response)=>{\n                  this.isLoading = false                \n                })\n            },\n            whenCancelled() {\n              console.log(\"User cancelled the loader.\")\n            }\n        }\n    }\n</script>\n<style>\n.loading-parent {\n  position: relative;\n}\n</style>\n```\n\n### As plugin\n```html\n<template>\n    <form @submit.prevent=\"submit\" class=\"loading-parent\" ref=\"formContainer\">\n        <!-- your form inputs goes here-->\n        <label><input type=\"checkbox\" v-model=\"fullPage\">Full page?</label>\n        <button type=\"submit\">Login</button>\n    </form>\n</template>\n\n<script>\n    import Vue from 'vue';\n    // Import component\n    import Loading from 'vue-loading-overlay';\n    // Import stylesheet\n    import 'vue-loading-overlay/dist/vue-loading.min.css';\n    // Init plugin\n    Vue.use(Loading);\n    // Using axios for the demo only\n    import axios from 'axios';\n\n    export default {\n        data() {\n            return {\n                fullPage: false\n            }\n        },\n        methods: {\n            submit() {\n                let loader = this.$loading.show({\n                  container: this.fullPage ? null : this.$refs.formContainer\n                });\n                // AJAX example with axios\n                axios.post('/api/login').then((response)=>{\n                  loader.hide()\n                })                 \n            }\n        }\n    }\n</script>\n\n<style>\n.loading-parent {\n  position: relative;\n}\n</style>\n```\n\n## Available props\nThe component accepts these props:\n\n| Attribute        | Type                | Default              | Description      |\n| :---             | :---:               | :---:                | :---             |\n| active           | Boolean             | `false`              | Show loading by default when `true`, use the .sync modifier to make it two-way binding |\n| can-cancel       | Boolean             | `false`              | Allow user to cancel by pressing escape or clicking outside |\n| on-cancel        | Function            | `()=>{}`             | Do something upon cancel, works in conjunction with `can-cancel`  |\n| animation        | String              | `fade`               | [Transition](https://vuejs.org/v2/guide/transitions.html) name |\n| is-full-page     | Boolean             | `true`               | When `false`; limit loader to its container* |\n\n* When `is-full-page` is set to `false`, the container element should be positioned as `position: relative`\n\n## API methods\n### `this.$loading.show()`\n```js\n// pass propsData to component\nlet loader = this.$loading.show({\n  // Optional parent container reference\n  container: this.$refs.loadingContainer,\n  // Can also pass available props here\n  canCancel: true,\n  onCancel: this.yourMethodName\n});\n// hide loader whenever you want\nloader.hide();\n```\n\n## Install in non-module environments (without webpack)\n```html\n<!-- Vue js -->\n<script src=\"https://cdn.jsdelivr.net/npm/vue@2.5/dist/vue.min.js\"></script>\n<!-- Lastly add this package -->\n<script src=\"https://cdn.jsdelivr.net/npm/vue-loading-overlay@2\"></script>\n<link href=\"https://cdn.jsdelivr.net/npm/vue-loading-overlay@2/dist/vue-loading.min.css\" rel=\"stylesheet\">\n<!-- Init the plugin -->\n<script>\nVue.use(VueLoading)\n</script>\n```\n\n### Browser support\n* [Modern](http://browserl.ist/) browsers only\n\n## Run examples on your localhost\n* Clone this repo\n* Make sure you have node-js `>=6.10` and [yarn](https://yarnpkg.com) `>=1.x` pre-installed\n* Install dependencies - `yarn install`\n* Run webpack dev server - `yarn start`\n* This should open the demo page at `http://localhost:9000` in your default web browser \n\n## Testing\n* This package is using [Jest](https://github.com/facebook/jest) and [vue-test-utils](https://github.com/vuejs/vue-test-utils) for testing.\n* Tests can be found in `__test__` folder.\n* Execute tests with this command `yarn test`\n\n## Inspired by\n* [Buefy](https://buefy.github.io/#/documentation/loading) loading component\n\n## License\n[MIT](LICENSE.txt) License\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ankurk91/vue-loading-overlay.git"
  },
  "scripts": {
    "build": "cross-env NODE_ENV=production webpack --progress --mode production",
    "dev": "cross-env NODE_ENV=development webpack-serve --config=webpack.config.dev.js",
    "prepublishOnly": "npm run test && npm run build",
    "start": "npm run dev",
    "test": "jest",
    "test:watch": "npm run test -- --watch --onlyChanged --notify"
  },
  "style": "dist/vue-loading.min.css",
  "version": "2.2.1"
}
